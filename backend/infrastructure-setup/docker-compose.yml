version: '3.8'

services:
  # API Gateway - FastAPI
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - USER_SERVICE_URL=http://user-service:5001
      - POLICY_SERVICE_URL=http://policy-service:5002
      - CLAIMS_SERVICE_URL=http://claims-service:5003
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - redis
      - user-service
      - policy-service
      - claims-service
    networks:
      - bhyt-network

  # User Management Service - Flask
  user-service:
    build:
      context: ../user-management-service
      dockerfile: Dockerfile
    ports:
      - "5001:5001"
    environment:
      - DATABASE_URL=postgresql://bhyt_user:bhyt_password@postgres:5432/bhyt_users
      - REDIS_URL=redis://redis:6379/1
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - FLASK_ENV=development
    depends_on:
      - postgres
      - redis
    networks:
      - bhyt-network

  # Policy Management Service - Flask
  policy-service:
    build:
      context: ../policy-management-service
      dockerfile: Dockerfile
    ports:
      - "5002:5002"
    environment:
      - DATABASE_URL=postgresql://bhyt_user:bhyt_password@postgres:5432/bhyt_policies
      - REDIS_URL=redis://redis:6379/2
      - FLASK_ENV=development
    depends_on:
      - postgres
      - redis
    networks:
      - bhyt-network

  # Claims Service - Flask
  claims-service:
    build:
      context: ../basic-claims-service
      dockerfile: Dockerfile
    ports:
      - "5003:5003"
    environment:
      - DATABASE_URL=postgresql://bhyt_user:bhyt_password@postgres:5432/bhyt_claims
      - REDIS_URL=redis://redis:6379/3
      - USER_SERVICE_URL=http://user-service:5001
      - POLICY_SERVICE_URL=http://policy-service:5002
      - FLASK_ENV=development
    depends_on:
      - postgres
      - redis
    networks:
      - bhyt-network

  # PostgreSQL Database
  postgres:
    image: postgres:14
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=bhyt_main
      - POSTGRES_USER=bhyt_user
      - POSTGRES_PASSWORD=bhyt_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database-setup/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - bhyt-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - bhyt-network

  # Nginx Load Balancer
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/certs:/etc/nginx/certs
    depends_on:
      - api-gateway
    networks:
      - bhyt-network

  # Service Discovery (Consul)
  consul:
    image: consul:latest
    ports:
      - "8500:8500"
    environment:
      - CONSUL_BIND_INTERFACE=eth0
    networks:
      - bhyt-network

volumes:
  postgres_data:
  redis_data:

networks:
  bhyt-network:
    driver: bridge
